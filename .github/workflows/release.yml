# Copyright 2021 Jack Bister
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set VERSIONNAME
        run: VERSIONNAME_DOTS=${GITHUB_REF##*/} && echo "VERSIONNAME_DOTS=$VERSIONNAME_DOTS" >> $GITHUB_ENV && VERSIONNAME=$(echo $VERSIONNAME_DOTS | sed 's/\./_/g') && echo "VERSIONNAME=$VERSIONNAME" >> $GITHUB_ENV

      - name: Setup
        uses: actions/setup-go@v2
        with:
          go-version: ^1.20
        id: go

      - name: Install Windows toolchain
        run: sudo apt install gcc-mingw-w64

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build frontend
        working-directory: ./internal/web/static
        run: npm ci && npm run build

      - name: Build and zip Linux x64
        id: build_linux_x64
        run: LINUX_X64_ASSET_PATH="logsuck-$VERSIONNAME-x64-linux.zip" && go build -o 'logsuck' -v -ldflags "-X main.versionString=$VERSIONNAME_DOTS" ./cmd/logsuck/main.go && zip $LINUX_X64_ASSET_PATH logsuck && echo "::set-output name=asset_path::$LINUX_X64_ASSET_PATH"

      - name: Build and zip Windows x64
        id: build_windows_x64
        run: WINDOWS_X64_ASSET_PATH="logsuck-$VERSIONNAME-x64-windows.zip" && GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc go build -o 'logsuck.exe' -v -ldflags "-X main.versionString=$VERSIONNAME_DOTS" ./cmd/logsuck/main.go && zip $WINDOWS_X64_ASSET_PATH logsuck.exe && echo "::set-output name=asset_path::$WINDOWS_X64_ASSET_PATH"

      - name: Test
        run: go test -v ./...

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Linux x64
        id: upload_linux_x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.build_linux_x64.outputs.asset_path}}
          asset_name: ${{steps.build_linux_x64.outputs.asset_path}}
          asset_content_type: application/zip

      - name: Upload Windows x64
        id: upload_windows_x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{steps.build_windows_x64.outputs.asset_path}}
          asset_name: ${{steps.build_windows_x64.outputs.asset_path}}
          asset_content_type: application/zip
