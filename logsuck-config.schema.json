{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://github.com/jackbister/logsuck/logsuck-config.schema.json",
  "title": "Logsuck Config",
  "description": "Configuration for logsuck",
  "type": "object",
  "properties": {
    "files": {
      "description": "The files which should be indexed.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "fileName": {
            "description": "The name of the file. This can also be a glob pattern such as \"log-*.txt\".",
            "type": "string"
          },
          "eventDelimiter": {
            "description": "A regex specifying the delimiter between events. For example, if the file contains one event per row this should be '\\n'. Default '\\n'.",
            "type": "string"
          },
          "readInterval": {
            "description": "The duration between checking the file for updates. A low value will make the events searchable sooner at the cost of using more CPU and doing more disk reads. Default '1s'.",
            "type": "string"
          },
          "timeLayout": {
            "description": "The layout of the _time field which will be extracted from this file. If no _time field is extracted or it doesn't match this layout, the time when the event was read will be used as the timestamp for that event. Default '2006/01/02 15:04:05'.",
            "type": "string"
          }
        },
        "required": ["fileName"]
      }
    },
    "fieldExtractors": {
      "description": "Regular expressions which will be used to extract field values from events.\nCan be given in two variants:\n1. An expression containing any number of named capture groups. The names of the capture groups will be used as the field names and the captured strings will be used as the values.\n2. An expression with two unnamed capture groups. The first capture group will be used as the field name and the second group as the value.\nIf a field with the name '_time' is extracted and matches the given timelayout, it will be used as the timestamp of the event. Otherwise the time the event was read will be used.\nMultiple extractors can be specified by using the fieldextractor flag multiple times. Defaults \"(\\w+)=(\\w+)\" and \"(?P<_time>\\d\\d\\d\\d/\\d\\d/\\d\\d \\d\\d:\\d\\d:\\d\\d.\\d\\d\\d\\d\\d\\d)\")",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "hostName": {
      "description": "The name of the host running this instance of logsuck. If empty or unset, logsuck will attempt to retrieve the hostname from the operating system.",
      "type": "string"
    },
    "forwarder": {
      "description": "Configuration for running in recipient mode, where events will be pushed to a recipient instance of logsuck instead of being saved locally.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether forwarding mode should be enabled or not. Default false.",
          "type": "boolean"
        },
        "maxBufferedEvents": {
          "description": "If the forwarder is unable to reach the recipient, events will begin to queue up. maxBufferedEvents is the maximum size of that queue. If maxBufferedEvents is exceeded before the forwarder can reach the recipient again, events will be lost.",
          "type": "number"
        },
        "recipientAddress": {
          "description": "The URL where the recipient instance is running. Default 'localhost:8081'.",
          "type": "string"
        }
      }
    },
    "recipient": {
      "description": "Configuration for running in recipient mode, where events will be rececived from other logsuck instances in forwarder mode instead of reading directly from the log files.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether recipient mode should be enabled or not. Default false.",
          "type": "boolean"
        },
        "address": {
          "description": "The addreess where the API endpoints that the forwarders will communicate with should be exposed. Default ':8081'.",
          "type": "string"
        },
        "timeLayouts": {
          "description": "timeLayouts is a map from source name to a string specifying the layout of timestamps in that file. It is the equivalent to setting timeLayout on an object in the files array when running in single host mode. The special key \"DEFAULT\" will be used for any source that is not specified in the map. Default '2006/01/02 15:04:05'.",
          "type": "object"
        }
      }
    },
    "sqlite": {
      "description": "Configuration for the SQLite database where logsuck will store its data.",
      "type": "object",
      "properties": {
        "fileName": {
          "description": "The file name which will be used for the SQLite database. Default 'logsuck.db'.",
          "type": "string"
        },
        "trueBatch": {
          "description": "Whether Logsuck should use 'true batch' mode or not. True batch is significantly faster at saving events on average, but is slower at handling duplicates and relies on SQLite behavior which may not be guaranteed. Default true.",
          "type": "boolean"
        }
      }
    },
    "web": {
      "description": "Configuration for the web GUI used to access logsuck.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether the web server should run. Defaults to true unless the configuration specifies that this logsuck instance should run in forwarder mode.",
          "type": "boolean"
        },
        "address": {
          "description": "The address where the web server will be exposed. Default ':8080'.",
          "type": "string"
        },
        "usePackagedFiles": {
          "description": "If true, all static files will be served using the files that are bundled into the executable. If false, the normal filesystem will be used (which means the directory './web/static/dist' must exist in the working directory). This is mostly useful when developing. Default true.",
          "type": "boolean"
        }
      }
    }
  }
}
